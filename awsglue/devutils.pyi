from typing import Any

class ExecutionProperty:
    maxConcurrentRuns: Any
    def __init__(self, maxConcurrentRuns: int = ...) -> None: ...
    def as_dict(self): ...

class Command:
    name: Any
    scriptLocation: Any
    def __init__(self, name, scriptLocation) -> None: ...
    def as_dict(self): ...

class Connections:
    connections: Any
    def __init__(self, connections=...) -> None: ...
    def as_dict(self): ...

class Job:
    name: str
    description: str
    logUri: str
    role: str
    executionProperty: Any
    command: Any
    defaultArguments: Any
    connections: Any
    maxRetries: int
    allocatedCapacity: int
    createdOn: Any
    lastModifiedOn: Any
    def __init__(self) -> None: ...
    def as_dict(self): ...
    def as_job_create_dict(self): ...
    def as_job_update_dict(self): ...

class GlueJobUtils:
    s3: Any
    glue: Any
    def __init__(self, glue_context) -> None: ...
    def get_jobs(self, nextToken: str = ...): ...
    def get_job(self, jobName): ...
    def create_job(self, job, file: str = ...): ...
    def update_job(self, job, file: str = ...): ...
    def delete_job(self, jobName): ...
